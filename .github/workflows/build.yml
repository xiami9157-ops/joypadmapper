# Nom du workflow
name: Build Joypadmapper APK

# Déclencheurs : commit sur main OU lancement manuel
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Récupération du code source depuis ton fork
      - name: Cloner le dépôt
        uses: actions/checkout@v3
        # Action officielle pour télécharger le contenu du repo

      # 2️⃣ Installer Java 11 (compatibilité avec anciens projets Android)
      - name: Installer Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # OpenJDK
          java-version: '11'       # Évite le bug avec les vieilles versions de Gradle

      # 3️⃣ Mise en cache des dépendances Gradle
      - name: Mettre en cache Gradle
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: gradle-

      # 4️⃣ Donner les droits d'exécution à gradlew
      - name: Rendre gradlew exécutable
        run: chmod +x ./gradlew

      # 5️⃣ Compiler l’APK debug
      - name: Compiler l’APK Debug
        run: ./gradlew assembleDebug
        # assembleDebug génère un APK non signé, parfait pour tester

      # 6️⃣ Sauvegarder l’APK en artefact téléchargeable
      - name: Sauvegarder l’APK
        uses: actions/upload-artifact@v4
        with:
          name: joypadmapper-apk
          path: app/build/outputs/apk/debug/app-debug.apkq
